/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.bowl.GUI;

import com.mycompany.bowl.AperturaArchivos.AperturaTexto;
import com.mycompany.bowl.AperturaArchivos.GuardadoTexto;
import com.mycompany.bowl.analizadores.LexicoLenguaje;
import com.mycompany.bowl.analizadores.SintaxisLenguajes;
import com.mycompany.bowl.analizadores.guardado.GuardarLenguaje;
import com.mycompany.bowl.backend.lenguaje.Lenguaje;
import java.io.File;
import java.io.StringReader;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;

/**
 *
 * @author mari2bar
 */
public class BowlGUI extends javax.swing.JFrame {

    private final AperturaTexto apertura;
    private final GuardadoTexto guardado;
    private ItemLenguaje seleccionado;
    private final TablaHTML tablahtml;
    private final PilaFrame pila;
    private final GuardarLenguaje guardarLenguaje;

    /**
     * Creates new form BowlGUI
     */
    public BowlGUI() {
        apertura = new AperturaTexto();
        guardado = new GuardadoTexto();
        tablahtml = new TablaHTML(this);
        tablahtml.setVisible(false);
        pila = new PilaFrame(this);
        pila.setVisible(false);
        initComponents();
        this.setLocationRelativeTo(null);
        guardarLenguaje = new GuardarLenguaje();
        this.agregarItems(guardarLenguaje.leerLenguaje());
        BowlGUI.txtTerminal.setEditable(false);
        BowlGUI.txtTerminal.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPrincipal = new javax.swing.JPanel();
        lblSeleccionado = new javax.swing.JLabel();
        spnTerminal = new javax.swing.JSplitPane();
        tbbPanel = new javax.swing.JTabbedPane();
        spTerminal = new javax.swing.JScrollPane();
        txtTerminal = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        itemAbrir = new javax.swing.JMenuItem();
        itemNuevo = new javax.swing.JMenuItem();
        itemGuardar = new javax.swing.JMenuItem();
        itemGuardarComo = new javax.swing.JMenuItem();
        itemCerrar = new javax.swing.JMenuItem();
        itemSalir = new javax.swing.JMenuItem();
        menuLenguajes = new javax.swing.JMenu();
        menuEjecutar = new javax.swing.JMenu();
        itemCargarLenguaje = new javax.swing.JMenuItem();
        itemCompilar = new javax.swing.JMenuItem();
        menuBorrar = new javax.swing.JMenu();
        menuVer = new javax.swing.JMenu();
        itemLALR = new javax.swing.JMenuItem();
        itemPila = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlPrincipal.setBackground(new java.awt.Color(89, 89, 89));

        lblSeleccionado.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        lblSeleccionado.setForeground(new java.awt.Color(255, 255, 255));

        spnTerminal.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        tbbPanel.setMinimumSize(new java.awt.Dimension(1050, 400));
        tbbPanel.setPreferredSize(new java.awt.Dimension(1050, 350));
        spnTerminal.setLeftComponent(tbbPanel);

        txtTerminal.setBackground(new java.awt.Color(51, 51, 51));
        txtTerminal.setColumns(20);
        txtTerminal.setForeground(new java.awt.Color(255, 5, 68));
        txtTerminal.setRows(5);
        spTerminal.setViewportView(txtTerminal);

        spnTerminal.setRightComponent(spTerminal);

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnTerminal, javax.swing.GroupLayout.DEFAULT_SIZE, 1565, Short.MAX_VALUE)
                    .addComponent(lblSeleccionado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spnTerminal, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuArchivo.setText("Archivo");

        itemAbrir.setText("Abrir");
        itemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAbrirActionPerformed(evt);
            }
        });
        menuArchivo.add(itemAbrir);

        itemNuevo.setText("Nuevo");
        itemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNuevoActionPerformed(evt);
            }
        });
        menuArchivo.add(itemNuevo);

        itemGuardar.setText("Guardar");
        itemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGuardarActionPerformed(evt);
            }
        });
        menuArchivo.add(itemGuardar);

        itemGuardarComo.setText("Guardar Como");
        itemGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGuardarComoActionPerformed(evt);
            }
        });
        menuArchivo.add(itemGuardarComo);

        itemCerrar.setText("Cerrar Texto");
        itemCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCerrarActionPerformed(evt);
            }
        });
        menuArchivo.add(itemCerrar);

        itemSalir.setText("Salir");
        itemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(itemSalir);

        menuBar.add(menuArchivo);

        menuLenguajes.setText("Lenguajes");
        menuBar.add(menuLenguajes);

        menuEjecutar.setText("Ejecutar");

        itemCargarLenguaje.setText("Cargar Lenguaje");
        itemCargarLenguaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCargarLenguajeActionPerformed(evt);
            }
        });
        menuEjecutar.add(itemCargarLenguaje);

        itemCompilar.setText("Compilar");
        itemCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCompilarActionPerformed(evt);
            }
        });
        menuEjecutar.add(itemCompilar);

        menuBorrar.setText("Borrar Lenguaje");
        menuEjecutar.add(menuBorrar);

        menuBar.add(menuEjecutar);

        menuVer.setText("Ver");

        itemLALR.setText("Tabla LALR");
        itemLALR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLALRActionPerformed(evt);
            }
        });
        menuVer.add(itemLALR);

        itemPila.setText("Pila");
        itemPila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPilaActionPerformed(evt);
            }
        });
        menuVer.add(itemPila);

        menuBar.add(menuVer);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarItems(List<Lenguaje> len) {
        len.forEach((lenguaje) -> {
            ItemLenguaje item = new ItemLenguaje(lenguaje, this), item2 = new ItemLenguaje(lenguaje, this, true);
            item.setHermano(item2);
            item2.setHermano(item);
            menuLenguajes.add(item);
            menuBorrar.add(item2);
        });
    }

    private void itemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAbrirActionPerformed
        // TODO add your handling code here:
        File file = apertura.abrirTexto(this);
        if (file != null && file.exists()) {
            String texto = apertura.leerArchivo(file);
            JScrollPane pane = new JScrollPane();
            JTextPane area = new JTextPane();
            area.setText(texto);
            NumeroLinea linea = new NumeroLinea(area);
            pane.setViewportView(area);
            pane.setRowHeaderView(linea);
            tbbPanel.addTab(file.getName(), null, pane, file.getPath());
        }
    }//GEN-LAST:event_itemAbrirActionPerformed


    private void itemCargarLenguajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCargarLenguajeActionPerformed
        BowlGUI.txtTerminal.setText("");
        String extension = tbbPanel.getTitleAt(tbbPanel.getSelectedIndex());
        int ex = extension.lastIndexOf('.') + 1;
        if (ex < extension.length()) {
            extension = extension.substring(ex);
            if (extension.equals("len")) {
                try {
                    // TODO add your handling code here:
                    String s = apertura.leerTexto(tbbPanel.getToolTipTextAt(tbbPanel.getSelectedIndex()));
                    SintaxisLenguajes lengua = new SintaxisLenguajes(new LexicoLenguaje(new StringReader(s)));
                    Lenguaje len = (Lenguaje) lengua.parse().value;
                    if (len != null && (BowlGUI.txtTerminal.getText() == null || BowlGUI.txtTerminal.getText().equals(""))) {
                        BowlGUI.txtTerminal.setText("--------------LENGUAJE ANALIZADO DE MANERA CORRECTA--------------");
                        boolean encontrado = false;
                        ItemLenguaje leng = null;
                        for (int i = 0; i < menuLenguajes.getItemCount(); i++) {
                            leng = (ItemLenguaje) menuLenguajes.getItem(i);
                            if (leng.getLenguaje().getInfo().getNombre().equals(len.getInfo().getNombre())) {
                                encontrado = true;
                                break;
                            }
                        }
                        guardarLenguaje.guardarLenguaje(len, len.getInfo().getNombre());
                        if (!encontrado) {
                            ItemLenguaje item = new ItemLenguaje(len, this), item2 = new ItemLenguaje(len, this, true);
                            item.setHermano(item2);
                            item2.setHermano(item);
                            menuLenguajes.add(item);
                            menuBorrar.add(item2);
                        } else if (leng != null) {
                            leng.cambiarLenguaje(len);
                        }
                    } else {
                        BowlGUI.txtTerminal.append("----------------ERROR AL ANALIZAR LENGUAJE--------------------");
                    }
                    //len.getAnalisis().analizarSintactico("4+9*3/5+3");
                    /*Token tok;
            do {                
                tok = len.getAnalisis().analizarTexto("**=");
                System.out.println(tok);
            } while (tok!=null && !tok.isUltimo());*/
                } catch (Exception e) {
                    BowlGUI.txtTerminal.append(e.getMessage() + "\n");
                    BowlGUI.txtTerminal.append("ERROR TERMINAL");
                }
            } else {
                BowlGUI.txtTerminal.append("La extesión no es .len, verificar el archivo\n");
            }
        } else {
            BowlGUI.txtTerminal.append("No tiene extensión o tiene un nombre que no se acepta.\n");
        }
    }//GEN-LAST:event_itemCargarLenguajeActionPerformed

    private void itemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_itemSalirActionPerformed

    private void itemGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGuardarComoActionPerformed
        // TODO add your handling code here:
        JScrollPane pane = (JScrollPane) tbbPanel.getComponentAt(tbbPanel.getSelectedIndex());
        JTextPane area = (JTextPane) pane.getViewport().getView();
        File f = guardado.guardarArchivoComo(area.getText(), this);
        if (f == null) {
            JOptionPane.showMessageDialog(this, "Error, no se pudo guardar archivo.");
        } else {
            tbbPanel.setTitleAt(tbbPanel.getSelectedIndex(), f.getName());
            tbbPanel.setToolTipTextAt(tbbPanel.getSelectedIndex(), f.getPath());
        }
    }//GEN-LAST:event_itemGuardarComoActionPerformed

    private void itemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGuardarActionPerformed
        // TODO add your handling code here:
        String s = tbbPanel.getToolTipTextAt(tbbPanel.getSelectedIndex());
        JScrollPane pane = (JScrollPane) tbbPanel.getComponentAt(tbbPanel.getSelectedIndex());
        JTextPane area = (JTextPane) pane.getViewport().getView();
        if (s != null) {
            if (!guardado.guardarArchivo(new File(s), area.getText())) {
                JOptionPane.showMessageDialog(this, "Error, no se pudo guardar archivo.");
            }
        } else {
            File f = guardado.guardarArchivoComo(area.getText(), this);
            if (f == null) {
                JOptionPane.showMessageDialog(this, "Error, no se pudo guardar archivo.");
            } else {
                tbbPanel.setTitleAt(tbbPanel.getSelectedIndex(), f.getName());
                tbbPanel.setToolTipTextAt(tbbPanel.getSelectedIndex(), f.getPath());
            }
        }
    }//GEN-LAST:event_itemGuardarActionPerformed

    public JMenu getMenuBorrar() {
        return menuBorrar;
    }

    public JMenu getMenuLenguajes() {
        return menuLenguajes;
    }

    public ItemLenguaje getSeleccionado() {
        return seleccionado;
    }

    public void setSeleccionado(ItemLenguaje seleccionado) {
        this.seleccionado = seleccionado;
    }

    public JLabel getLblSeleccionado() {
        return lblSeleccionado;
    }

    private void itemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNuevoActionPerformed
        // TODO add your handling code here:
        JScrollPane pane = new JScrollPane();
        JTextPane area = new JTextPane();
        area.setText("");
        NumeroLinea linea = new NumeroLinea(area);
        pane.setViewportView(area);
        pane.setRowHeaderView(linea);
        tbbPanel.addTab(null, null, pane, null);
    }//GEN-LAST:event_itemNuevoActionPerformed

    private void itemCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCompilarActionPerformed
        // TODO add your handling code here:
        BowlGUI.txtTerminal.setText("");
        String extension = tbbPanel.getTitleAt(tbbPanel.getSelectedIndex());
        int ex = extension.lastIndexOf('.') + 1;
        if (ex < extension.length()) {
            extension = extension.substring(ex);
            if (this.seleccionado != null && extension.equals(this.seleccionado.getLenguaje().getInfo().getExtension())) {
                String s = apertura.leerTexto(tbbPanel.getToolTipTextAt(tbbPanel.getSelectedIndex()));
                this.seleccionado.getLenguaje().getAnalisis().analizarSintactico(s);
            } else {
                BowlGUI.txtTerminal.append("La extesión no coincide con el Lenguaje Seleccionado.\n");
            }
        } else {
            BowlGUI.txtTerminal.append("No tiene extensión o tiene un nombre que no se acepta.\n");
        }
    }//GEN-LAST:event_itemCompilarActionPerformed

    private void itemLALRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLALRActionPerformed
        // TODO add your handling code here:
        if (this.seleccionado != null) {
            tablahtml.setVisible(true);
            tablahtml.agregarTabla(this.seleccionado.getLenguaje());
        }
    }//GEN-LAST:event_itemLALRActionPerformed

    private void itemCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCerrarActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "¿Esta seguro de cerrar esta pestaña?", this.tbbPanel.getTitleAt(tbbPanel.getSelectedIndex()), JOptionPane.OK_OPTION)
                == JOptionPane.OK_OPTION) {
            if (JOptionPane.showConfirmDialog(this, "¿Desea guardar los datos de la pestaña?", this.tbbPanel.getTitleAt(tbbPanel.getSelectedIndex()), JOptionPane.OK_OPTION)
                    == JOptionPane.OK_OPTION) {
                this.itemGuardarActionPerformed(evt);
            }
            this.tbbPanel.removeTabAt(tbbPanel.getSelectedIndex());
        }
    }//GEN-LAST:event_itemCerrarActionPerformed

    private void itemPilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPilaActionPerformed
        // TODO add your handling code here:
        if (this.seleccionado != null && this.seleccionado.getLenguaje().getAnalisis().getPila() != null) {
            this.pila.setVisible(true);
            this.pila.iniciarPanel();
        }
    }//GEN-LAST:event_itemPilaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        for (int i = 0; i < menuLenguajes.getItemCount(); i++) {
            ItemLenguaje l = (ItemLenguaje) menuLenguajes.getItem(i);
            l.getLenguaje().getCodigo().setCl(null);
            guardarLenguaje.guardarLenguaje(l.getLenguaje(), l.getLenguaje().getInfo().getNombre());
        }
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemAbrir;
    private javax.swing.JMenuItem itemCargarLenguaje;
    private javax.swing.JMenuItem itemCerrar;
    private javax.swing.JMenuItem itemCompilar;
    private javax.swing.JMenuItem itemGuardar;
    private javax.swing.JMenuItem itemGuardarComo;
    private javax.swing.JMenuItem itemLALR;
    private javax.swing.JMenuItem itemNuevo;
    private javax.swing.JMenuItem itemPila;
    private javax.swing.JMenuItem itemSalir;
    private javax.swing.JLabel lblSeleccionado;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuBorrar;
    private javax.swing.JMenu menuEjecutar;
    private javax.swing.JMenu menuLenguajes;
    private javax.swing.JMenu menuVer;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JScrollPane spTerminal;
    private javax.swing.JSplitPane spnTerminal;
    private javax.swing.JTabbedPane tbbPanel;
    public static javax.swing.JTextArea txtTerminal;
    // End of variables declaration//GEN-END:variables
}
